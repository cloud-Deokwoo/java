### JAVA API(Application Programming Interface)

 - API는 라이브러라고도 부르며 프로그램 개발에 자주 사용되는 클래스 및 인터페이스의 모음을 말함. 
 - 자바 표준 API를 확인 !! 
 
# java.lang 패키지
 - java.lang 패키지는 자바 프로그램의 기본적인 클래스들을 담고 있는 패키지
 - 이런 이유로, java.lang 패키지에 있는 클래스와 인터페이스는 import 구문 없이 사용이 가능함.
 
# java.lang 패키지 주요 클래스 
 - Object : 자바 클래스의 최상위 클래스
 - System : 표준 입력장치(키보드)로부터 데이터를 입력받거나 표준 출력장치(모니터)로 출력하기 위한 클래스
 - Class : 클래스를 메모리에 로딩할 때 사용!
 - String : 문자열을 저장하고, 문자열의 여러가지 정보를 얻을 때 사용
 - Math : 수학 함수를 이용할 때 사용
 - Wrapper(Byte, Short, Integer, Long, Float, Double, Boolean, Character) 
        : 기본 데이터 타입의 객체를 만들 때 사용!
        

### Object 클래스
 - 클래스를 선언할 때 extends 키워드로 다른 클래스를 상속하지 않으면 묵시적으로 Object 클래스를 상속. 
 - 모든 클래스가 Object를 상속하기 때문에 Object의 메서드는 모든 클래스에서 사용이 가능함. 
 
### System 클래스
 - System 클래스를 이용하면 운영체제의 일부 기능을 이용할 수 있다!
    프로그램 종료, 키보드로 입력, 모니터 출력, 메모리 정리, 현재시간 읽기 등 작업이 가능!
 - System 클래스의 모든 멤버는 static으로 구성되어 있어 클래스 이름으로 바로 접근이 가능합니다. 
 
 ## System 클래스 주요 메서드
 1. exit() : 현재 실행하고 있는 프로세스를 강제 종료! 정상적인 종료일 경우 status 값을 0으로 주고, 
 	비정상적인 경우에는 0이외의 값을 줌.
 
 2. currentTimeMillis() : 컴퓨터의 시계로부터 현재 시간을 읽어서 밀리세컨드(1/1000초)단위와 나노세컨드
 	(1/10^9초)의 long값을 리턴합니다. 주로 프로그램 실행 요소 시간 측싱으로 성능을 테스트할 때 사용
 	
 3. getProperty() : JVM이 시작할 때 자동 설정되는 시스템 속성값을 구합니다. 
 
 4. gc() : Garbage Collector를 실행!
 

### String 클래스 
 - String의 생성자를 사용하여 객체를 만들 필요 없이 기초 데이터를 사용할 때 처럼 바로 초기화해서 사용 가능

 ## String 주요 메서드
 1. charAt() : 특정 인덱스의 글자를 리턴
 2. indexOf() : 특정 문자열의 시작 인덱스 값을 반환! 만약 주어진 문자열이 없는 경우 -1를 반환
 3. length()* : 문자열의 길이 값을 알려줌
 4. replace()* : 특정 문자열을 변경
 5. substring()* : 인덱스를 기준으로 그 앞의 문자열을 잘라줍니다. 매개변수가 2개인 경우, 
 	처음 매개변수 값 이상, 두번째 매개값 미만의 문자열을 제외한 나머지를 삭제. 
 6. toUpperCase() : 영문자 문자열을 대문자로 치환
 7. toLowerCase() : 영문자 문자열을 소문자로 치환
 8. trim() : 문자열의 앞, 뒤 공백을 제거
 9. equals() : 문자열의 값을 비교
 10. valueOf() : 기본 데이터 타입의 값들을 문자열로 변환
 11. split()* : 특정 문자열 기준으로 잘라서 배열에 리턴



